[{"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/index.js":"1","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/Decrypt.js":"2","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/Encrypt.js":"3","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/components/CryptoAndKeySelection.jsx":"4","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/CaesarDecrypt.js":"5","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/RailFenceDecrypt.js":"6","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/components/App.jsx":"7","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/RailFenceEncrypt.js":"8"},{"size":165,"mtime":1606970207759,"results":"9","hashOfConfig":"10"},{"size":474,"mtime":1606970207759,"results":"11","hashOfConfig":"10"},{"size":508,"mtime":1606970207759,"results":"12","hashOfConfig":"10"},{"size":1473,"mtime":1606970207759,"results":"13","hashOfConfig":"10"},{"size":217,"mtime":1606970207755,"results":"14","hashOfConfig":"10"},{"size":1713,"mtime":1607000414388,"results":"15","hashOfConfig":"10"},{"size":2787,"mtime":1606998154642,"results":"16","hashOfConfig":"10"},{"size":1251,"mtime":1607000408124,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"5w2rck",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/index.js",[],["37","38"],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/Decrypt.js",[],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/Encrypt.js",[],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/components/CryptoAndKeySelection.jsx",[],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/CaesarDecrypt.js",[],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/RailFenceDecrypt.js",["39"],"/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/components/App.jsx",["40"],"import React, { useState } from \"react\";\nimport CryptoAndKeySelection from \"./CryptoAndKeySelection\";\nimport { saveAs, encodeBase64 } from \"@progress/kendo-file-saver\";\nimport InputTextOrFile from \"./InputTextOrFile\";\nimport Encrypt from \"../actions/Encrypt\";\nimport Decrypt from \"../actions/Decrypt\";\n\nfunction App() {\n  const [methodAndKey, setMethodAndKey] = useState({\n    cryptoMethod: \"\",\n    key: \"\",\n  });\n  const [content, setContent] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  function handleEncrypt(e) {\n    try {\n      setOutput(\n        \"ENCRYPTION OUTPUT:\" +\n          \"\\n\" +\n          Encrypt(\n            methodAndKey.cryptoMethod,\n            parseInt(methodAndKey.key, 10),\n            content\n          )\n      );\n    } catch (error) {\n      if (\n        !methodAndKey.cryptoMethod ||\n        !(parseInt(methodAndKey.key) == methodAndKey.key) ||\n        content.length === 0\n      )\n        alert(\"Something wrong!. Are you miss method or key or input.\");\n      console.log(error);\n    }\n  }\n\n  function handleDecrypt(e) {\n    try {\n      setOutput(\n        \"DECRYPTION OUTPUT:\" +\n          \"\\n\" +\n          Decrypt(\n            methodAndKey.cryptoMethod,\n            parseInt(methodAndKey.key, 10),\n            content\n          )\n      );\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  function saveOutputAs() {\n    try {\n      if (output) {\n        const dataURI = \"data:text/plain;base64,\" + encodeBase64(output);\n        saveAs(dataURI, \"undefined.txt\");\n      } else {\n        alert(\"Output not found.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>Crypto App MMANM</h1>\n      </div>\n      <div className=\"form\">\n        <CryptoAndKeySelection\n          onUpdate={(method, key) =>\n            setMethodAndKey({ cryptoMethod: method, key: key })\n          }\n        />\n        <hr></hr>\n        <InputTextOrFile onUpdate={(input) => setContent(input)} />\n        <hr></hr>\n        <div>\n          <button id=\"action\" onClick={handleEncrypt}>\n            <span>Encrypt</span>\n          </button>\n          <button id=\"action\" onClick={handleDecrypt}>\n            <span>Decrypt</span>\n          </button>\n        </div>\n\n        <textarea\n          name=\"outputPart\"\n          id=\"OP\"\n          style={{ marginTop: \"30px\", backgroundColor: \"#e6e6e6\" }}\n          value={output}\n          rows=\"4\"\n          readOnly={true}\n        />\n\n        <div>\n          <button id=\"action\" onClick={() => setOutput(\"\")}>\n            <span>Clear</span>\n          </button>\n          <button id=\"action\" onClick={saveOutputAs}>\n            <span>Save As</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/nhatnguyen/Documents/Current Subjects/MMANM/ass/cryptoWebApp/symmetric-crypto-app/src/actions/RailFenceEncrypt.js",["41"],"const RailFenceEach8LetterEncrypt = (key, text) => {\n  let paragraphResults = [];\n  let paragraphs = text.split(\"\\n\");\n\n  paragraphs.map((paragraph) => {\n    let paragraphResult = [];\n\n    for (let i = 0; i < paragraph.length; i = i + 8) {\n      let aBlock8letter =\n        i + 8 <= paragraph.length\n          ? paragraph.slice(i, i + 8)\n          : paragraph.slice(i, paragraph.length);\n      paragraphResult.push(RailFenceEncrypt(key, aBlock8letter));\n    }\n\n    paragraphResults.push(paragraphResult.join(\"\"));\n  });\n\n  return paragraphResults.join(\"\\n\");\n};\n\nconst RailFenceEncrypt = (key, text) => {\n  let rail = [];\n\n  for (let i = 0; i < key; i++) {\n    for (let j = 0; j < text.length; j++) {\n      rail.push([]);\n      rail[i][j] = \"\\n\";\n    }\n  }\n\n  let dir_down = false;\n  let [row, col] = [0, 0];\n\n  for (let i = 0; i < text.length; i++) {\n    if (row === 0 || row === key - 1) {\n      dir_down = !dir_down;\n    }\n\n    rail[row][col++] = text[i];\n\n    dir_down ? row++ : row--;\n  }\n\n  let result = [];\n  for (let i = 0; i < key; i++) {\n    for (let j = 0; j < text.length; j++) {\n      if (rail[i][j] !== \"\\n\") {\n        result.push(rail[i][j]);\n      }\n    }\n  }\n\n  return result.join(\"\");\n};\n\nexport default RailFenceEach8LetterEncrypt;\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":30,"nodeType":"48","messageId":"49","endLine":5,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":30,"column":38,"nodeType":"52","messageId":"53","endLine":30,"endColumn":40},{"ruleId":"46","severity":1,"message":"47","line":5,"column":30,"nodeType":"48","messageId":"49","endLine":5,"endColumn":32},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]